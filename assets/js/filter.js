"use strict";function _toConsumableArray(r){return _arrayWithoutHoles(r)||_iterableToArray(r)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance")}function _iterableToArray(r){if(Symbol.iterator in Object(r)||"[object Arguments]"===Object.prototype.toString.call(r))return Array.from(r)}function _arrayWithoutHoles(r){if(Array.isArray(r)){for(var t=0,e=new Array(r.length);t<r.length;t++)e[t]=r[t];return e}}function filter(r){for(var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:180,e=2<arguments.length&&void 0!==arguments[2]?arguments[2]:.2,n=3<arguments.length&&void 0!==arguments[3]?arguments[3]:.05,o=Math.max.apply(Math,_toConsumableArray(r)),a=[],i=[],l=0;l<r.length;l++)r[l]/o>n&&(a.push(t+e*l),i.push(r[l]/o));return[a,i]}exports.filter=filter;